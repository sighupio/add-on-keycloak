# Copyright (c) 2021 SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: create-user-payload
  namespace: keycloak
data:
  create-user.json: '{"firstName":"no","lastName":"body", "email":"hello@sighup.io", "enabled":"true", "username":"hello"}'
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    run: create-user
  name: create-user
  namespace: keycloak
spec:
  template:
    metadata:
      labels:
        run: create-user
    spec:
      securityContext:
        runAsUser: 0
      initContainers:
        - name: token
          image: registry.sighup.io/fury/curlimages/curl:latest
          command:
            [
              "sh",
              "-c",
              'apk add jq && curl -d "client_id=admin-cli" -d "username=admin" -d "password=${KEYCLOAK_PASSWORD}" -d "grant_type=password" "http://keycloak-service:8080/realms/master/protocol/openid-connect/token" | jq -r .access_token > /token/current',
            ]
          volumeMounts:
            - mountPath: /token
              name: token-volume
          env:
            - name: KEYCLOAK_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: keycloak-initial-admin
      containers:
        - name: create-user
          command:
            [
              "sh",
              "-c",
              'curl --fail --location --request POST "http://keycloak-service:8080/admin/realms/master/users" --header "Content-Type: application/json" --header "Authorization: Bearer $(cat /token/current)" --data "@/data/create-user-payload/create-user.json"',
            ]
          image: registry.sighup.io/fury/curlimages/curl:latest
          resources: {}
          volumeMounts:
            - mountPath: /token
              name: token-volume
            - mountPath: /data/create-user-payload/create-user.json
              subPath: create-user.json
              name: payload
      restartPolicy: OnFailure
      volumes:
        - name: token-volume
          emptyDir: {}
        - name: payload
          configMap:
            name: create-user-payload
